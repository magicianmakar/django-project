version: 2
defaults: &defaults
  working_directory: ~/ShopifiedApp/webapp
  docker:
    - image: circleci/python:3.8.10-node
      environment:
        SECRET_KEY: dBEn2nkwPvlKuEwrQtBwMLlOOTm3TObmllyOb0j6ZepIqztLQh28oItsJQCbVsF1

        DEBUG_APP: "TRUE"

        DATABASE_URL: postgresql://ubuntu:@127.0.0.1:5432/circle_test
        DATA_STORE_DATABASE_URL: ""

        REDISCLOUD_URL: redis://localhost:6379

        AWS_ACCESS_KEY_ID: AKIAIVNSP7PF5CR4UC7Q
        AWS_SECRET_ACCESS_KEY: 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

        S3_CUSTOM_DOMAIN: d1ohstt056kdjc.cloudfront.net
        S3_BUCKET_NAME: dropified-assets-dev-ci
        S3_PRODUCT_FEED_BUCKET: shopifiedapp-feeds-dev-789552
        S3_UPLOADS_BUCKET: shopifiedapp-uploads-dev-789552

        SHOPIFY_API_KEY: f136ffe9efd969c70ad04f31de4a59de
        SHOPIFY_API_SECRET: e22d8748c0507ad996ef80691a4054a0

        BIGCOMMERCE_APP_ID: 19230
        BIGCOMMERCE_CLIENT_ID: p95pk5kxbfb9dudaafsev7mcrdcn2h2
        BIGCOMMERCE_CLIENT_SECRET: f4c8f3801bc4653bd33222bfdb9538dc4d169bef09ca4acffe416baeac1f9439

        PUSHER_APP_ID: 255355
        PUSHER_KEY: 446d8151fc6d4157e2cc
        PUSHER_SECRET: 4e7022fac49cdb27bcdb
        PUSHER_SOCKET_URL: ws://ws.pusherapp.com/app/446d8151fc6d4157e2cc
        PUSHER_URL: http://446d8151fc6d4157e2cc:4e7022fac49cdb27bcdb@api.pusherapp.com/apps/255355

        FOUNDELASTICSEARCH_URL: https://search-dropified-ci-tests-thechx2xa2if5bonuiyobhyamq.us-east-1.es.amazonaws.com/

        STRIPE_PUBLIC_KEY: ""
        STRIPE_SECRET_KEY: ""

    - image: circleci/postgres:12.7
      environment:
        POSTGRES_USER: ubuntu
        POSTGRES_DB: circle_test
        POSTGRES_PASSWORD: "ubuntu1"

    - image: redis:6.0.9

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - v5-dep-{{ .Branch }}-
          - v5-dep-master-
          - v5-dep-

      - run:
          name: Install Dependencies
          command: |
              ./scripts/prepare_build.sh
              source venv/bin/activate
              pip install -r requirements.txt
              pip install -r requirements-dev.txt
              npm install --dev

      - run:
          name: "flake8"
          command: |
            source venv/bin/activate
            flake8 --version
            flake8 --show-source

      - run:
          name: Common Issues
          command: |
            source venv/bin/activate
            ./scripts/common_issues.sh

      - run:
          name: Template Syntax Check
          command: |
            source venv/bin/activate
            python manage.py templatecheck -v3

      - run:
          name: JSHint
          command: |
            npm run jshint

      # Save dependency cache
      - save_cache:
          key: v5-dep-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "bower.json" }}-{{ checksum "package.json" }}
          paths:
          - app/static/libs/bower_components
          - node_modules
          - venv

  test:
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          keys:
          - v5-dep-{{ .Branch }}-
          - v5-dep-master-
          - v5-dep-

      - run:
          name: Install Codecov
          command: |
            source venv/bin/activate
            pip install -r requirements-dev.txt

      - run:
          name: Django Tests
          command: |
            source venv/bin/activate
            coverage run ./manage.py test --noinput -v2 --exclude-tag excessive

      - run:
          name: Coverage Report
          command: |
            source venv/bin/activate
            coverage report --skip-covered

  statics:
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          keys:
          - v5-dep-{{ .Branch }}-
          - v5-dep-master-
          - v5-dep-

      - run:
          name: Static Files
          command: |
            source venv/bin/activate
            python manage.py collectstatic --noinput --traceback 2>&1 | sed '/^Post-processed/d;/^Copying/d;/^$/d'

      - run:
          name: Set up yuglify
          command: |
              sudo npm install -g yuglify

      - run:
          name: Django Compressor
          command: |
            source venv/bin/activate
            DEBUG_APP="FALSE" python manage.py compress

  deploy:
    working_directory: ~/ShopifiedApp/webapp
    docker:
      - image: circleci/python:3.6.10
    steps:
      - run:
          name: Deploy Master to Heroku
          command: |
            echo "Manual Deploy Only"

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - statics:
          requires:
            - build
