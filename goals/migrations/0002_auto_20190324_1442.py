# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-03-24 14:42
from __future__ import unicode_literals

from django.db import migrations
from django.conf import settings
from django.templatetags.static import static
from django.urls import reverse
from django.db import transaction

from goals.step_slugs import (
    SAVE_PRODUCT_TO_DROPIFIED,
    INSTALL_CHROME_EXTENSION,
    ADD_PRODUCT_TO_BOARD,
)


@transaction.atomic
def forward(apps, schema_editor):
    Goal = apps.get_model('goals', 'Goal')
    Step = apps.get_model('goals', 'Step')
    GoalStepRelationship = apps.get_model('goals', 'GoalStepRelationship')
    goal = Goal.objects.create(
        goal_number=1,
        title='Add Products To Dropified Boards',
        description='Let\'s get you started saving time and using Dropified right away.',
        tip='You can save up to 25 minutes per product by using Dropified to add products to your stores.'
    )
    GoalStepRelationship.objects.create(
        goal=goal,
        step_number=1,
        step=Step.objects.create(
            title='Install Chrome Extension',
            description='Start researching saving products to your Dropified Product Boards.',
            slug=INSTALL_CHROME_EXTENSION,
            action_title='INSTALL EXTENSION',
            action_url='https://chrome.google.com/webstore/detail/dropified-dropshipping-fi/aogkkekoinpipjlolpcicigndjlcpdcn?hl=en',
            icon_src=static('chrome-icon.png'),
            show_me_how_url="https://www.dropified.com/training/setting-up-dropified/add-the-dropified-extension-to-google-chrome-3/"
        )
    )
    GoalStepRelationship.objects.create(
        goal=goal,
        step_number=2,
        step=Step.objects.create(
            title='Save a Product to Dropified',
            description='Go to AliExpress.com, search for a product and click the green icon next to the product in the search results.',
            slug=SAVE_PRODUCT_TO_DROPIFIED,
            action_title='GO TO ALIEXPRESS',
            action_url='https://www.aliexpress.com/',
            icon_src=static('aliexpress-icon.png'),
            show_me_how_url="https://www.dropified.com/training/using-dropified-software/how-to-browse-and-save-products-in-aliexpress-3/"
        )
    )
    GoalStepRelationship.objects.create(
        goal=goal,
        step_number=3,
        step=Step.objects.create(
            title='Add Your Product To A Board',
            description='Similar to Pinterest, you can save your products to Product Boards for organizing your research.',
            slug=ADD_PRODUCT_TO_BOARD,
            action_title='GO TO PRODUCT BOARDS',
            action_url='{}/{}'.format(settings.APP_URL, reverse('boards_list')),
            icon_src=static('dropified-icon.png'),
            show_me_how_url="https://www.dropified.com/training/using-dropified-software/create-dropified-boards-to-organize-selected-products/"
        )
    )


@transaction.atomic
def backward(apps, schema_editor):
    Goal = apps.get_model('goals', 'Goal')
    Step = apps.get_model('goals', 'Step')
    Goal.objects.filter(goal_number=1).delete()
    Step.objects.filter(slug=INSTALL_CHROME_EXTENSION).delete()
    Step.objects.filter(slug=SAVE_PRODUCT_TO_DROPIFIED).delete()
    Step.objects.filter(slug=ADD_PRODUCT_TO_BOARD).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('goals', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(forward, backward),
    ]
