# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-03-29 16:42
from __future__ import unicode_literals

from django.db import migrations, models


def create_profit_dashboard_upsell(apps, schema_editor):
    body = """
        <div class="row">
            <div class="col-md-12">
                <div class="jumbotron">
                    <h1>Profit Dashboard</h1>
                    <p>Automatically calculate your profits and see how your business is performing.</p>
                    <p>See your Sales data minus the cost of product acquisition (including Facebook Ads and AliExpress expenses, shipping and taxes).</p>
                    <p>Are you selling your products for the right price?  Are you promoting products that are essentially loss leaders?  Get all that data and more by monitoring your profit statistics in one easy and new dashboard for Premier Members of Dropified.</p>
                    <p>
                        <a href="https://app.dropified.com/user/profile#plan" role="button" class="btn btn-success btn-lg">Upgrade to Premier</a>
                    </p>
                </div>
                <div class="embed-responsive embed-responsive-16by9">
                    <iframe class="embed-responsive-item" src="https://www.youtube.com/embed/FZMu_mq7B9w" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                </div>
                <br>
                <h2 id="whats-included">What's included?</h2>
                <dl>
                    <dt>Revenue from your Store</dt>
                    <dd>Profit is broken down for each store you have connected and each order in your store</dd>
                    <dt>Automatically record your AliExpress costs</dt>
                    <dd>Costs from AliExpress are included and assigned to each order. This includes any taxes and shipping costs too!</dd>
                    <dt>Automatically include your FB Costs</dt>
                    <dd>Costs from FB Ads are included and deducted from your revenue to give an accurate profit. Select which campaigns you want to import, or import them all.</dd>
                    <dt>Add additional costs</dt>
                    <dd>Additional expenses can be manually added if needed.</dd>
                    <dt>Visualize your data!</dt>
                    <dd>
                        Graph your Fulfilment costs, number of fulfilments, ads spend and other costs against your revenue to see what your true profit is.
                        <br>Filter by day, month or a custom period.
                    </dd>
                </dl>
                <img src="/static/img/profit-dashboard-graph.png" class="img-responsive" alt="Profit Dashboard Graph">
            </div>
        </div>
        <style type="text/css">
            .videoWrapper {position: relative;padding-bottom: 23%;padding-top: 25px;height: 0;} .videoWrapper iframe {position: absolute;top: 0;left: 25%;width: 50%;} #whats-included {margin-top: 20px;font-size: 36px;} dl dt {font-size: 20px;color: #5b9bd5;margin-top: 20px;font-weight: normal;} dl dd {font-size: 18px;}
        </style>
    """

    Article = apps.get_model("article", "Article")
    User = apps.get_model('auth', 'User')
    author = User.objects.filter(is_superuser=True).first()

    if author is not None:
        Article.objects.create(
            title='Business Profit Dashboard',
            slug='business-profit-dashboard',
            author=author,
            stat=0,
            body_format='wysiwyg',
            show_header=False,
            body=body,
        )


class Migration(migrations.Migration):

    dependencies = [
        ('article', '0027_sidebarlink_store_type'),
    ]

    operations = [
        migrations.AddField(
            model_name='article',
            name='show_header',
            field=models.BooleanField(default=True),
        ),
        migrations.RunPython(create_profit_dashboard_upsell),
    ]
